using UnityEngine;

public class HitscanShooter : MonoBehaviour
{
    public float damage = 25f; // Damage per shot
    public float fireRate = 10f; // Shots per second
    public float range = 100f; // Max range of the hitscan

    public Camera fpsCam; // Reference to the first-person camera

    public int magazineSize = 30; // Magazine size
    public float reloadSpeed = 2f; // Time it takes to reload in seconds

    private int currentAmmo; // Current ammo count
    private bool isReloading = false; // Flag to check if reloading

    private float nextTimeToFire = 0f; // Cooldown time between shots

    private void Start()
    {
        currentAmmo = magazineSize;
    }

    void Update()
    {
        if (isReloading)
            return;

        if (Input.GetKeyDown(KeyCode.R) && currentAmmo < magazineSize)
        {
            StartCoroutine(Reload());
            return;
        }

        if (Input.GetButton("Fire1") && Time.time >= nextTimeToFire && !isReloading)
        {
            nextTimeToFire = Time.time + 1f / fireRate;
            Shoot();
        }
    }

    void Shoot()
    {
        if (currentAmmo > 0)
        {
            currentAmmo--;
            RaycastHit hit;
            if (Physics.Raycast(fpsCam.transform.position, fpsCam.transform.forward, out hit, range))
            {
                // Check if the object hit has a barricade component
                Barricade barricade = hit.transform.GetComponent<Barricade>();
                if (barricade != null)
                {
                    barricade.TakeDamage(damage);
                }
            }
        }
        else
        {
            StartCoroutine(Reload());
        }
    }

    IEnumerator Reload()
    {
        isReloading = true;
        Debug.Log("Reloading...");

        yield return new WaitForSeconds(reloadSpeed);

        currentAmmo = magazineSize;
        isReloading = false;
    }
}
